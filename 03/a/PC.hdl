// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Register(in=regIn,load=regLoad, out=regOut, out=out);
    Inc16(in=regOut, out=incOut);

    // calc regIn
    // if reset == 1, regIn = 0
    Mux16(a=tmp2, b=false, sel=reset, out=regIn);
    // if load == 1, regIn = in
    Mux16(a=tmp1, b=in, sel=load, out=tmp2);
    // if inc == 1, regIn = regOut + 1
    Mux16(a=false, b=incOut, sel=inc, out=tmp1);

    // calc regLoad
    Or(a=reset, b=inc, out=resetorinc);
    Or(a=load, b=resetorinc, out=regLoad);
}