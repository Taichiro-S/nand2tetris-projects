// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux(a=loop0, b=in[0], sel=load, out=outMux0);
    DFF(in=outMux0, out=loop0, out=out[0]);
    Mux(a=loop1, b=in[1], sel=load, out=outMux1);
    DFF(in=outMux1, out=loop1, out=out[1]);
    Mux(a=loop2, b=in[2], sel=load, out=outMux2);
    DFF(in=outMux2, out=loop2, out=out[2]);
    Mux(a=loop3, b=in[3], sel=load, out=outMux3);
    DFF(in=outMux3, out=loop3, out=out[3]);
    Mux(a=loop4, b=in[4], sel=load, out=outMux4);
    DFF(in=outMux4, out=loop4, out=out[4]);
    Mux(a=loop5, b=in[5], sel=load, out=outMux5);
    DFF(in=outMux5, out=loop5, out=out[5]);
    Mux(a=loop6, b=in[6], sel=load, out=outMux6);
    DFF(in=outMux6, out=loop6, out=out[6]);
    Mux(a=loop7, b=in[7], sel=load, out=outMux7);
    DFF(in=outMux7, out=loop7, out=out[7]);
    Mux(a=loop8, b=in[8], sel=load, out=outMux8);
    DFF(in=outMux8, out=loop8, out=out[8]);
    Mux(a=loop9, b=in[9], sel=load, out=outMux9);
    DFF(in=outMux9, out=loop9, out=out[9]);
    Mux(a=loop10, b=in[10], sel=load, out=outMux10);
    DFF(in=outMux10, out=loop10, out=out[10]);
    Mux(a=loop11, b=in[11], sel=load, out=outMux11);
    DFF(in=outMux11, out=loop11, out=out[11]);
    Mux(a=loop12, b=in[12], sel=load, out=outMux12);
    DFF(in=outMux12, out=loop12, out=out[12]);
    Mux(a=loop13, b=in[13], sel=load, out=outMux13);
    DFF(in=outMux13, out=loop13, out=out[13]);
    Mux(a=loop14, b=in[14], sel=load, out=outMux14);
    DFF(in=outMux14, out=loop14, out=out[14]);
    Mux(a=loop15, b=in[15], sel=load, out=outMux15);
    DFF(in=outMux15, out=loop15, out=out[15]);
    
}
